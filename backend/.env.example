# Port number
PORT=3000

# URL of the Mongo DB
MONGODB_URL=mongodb://127.0.0.1:27017/node-boilerplate

# JWT
# JWT secret key
JWT_SECRET=thisisasamplesecret
# Number of minutes after which an access token expires
JWT_ACCESS_EXPIRATION_MINUTES=30
# Number of days after which a refresh token expires
JWT_REFRESH_EXPIRATION_DAYS=30
# Number of minutes after which a reset password token expires
JWT_RESET_PASSWORD_EXPIRATION_MINUTES=10
# Number of minutes after which a verify email token expires
JWT_VERIFY_EMAIL_EXPIRATION_MINUTES=10

# SECRETS MANAGER CONFIGURATION
# Secrets provider: aws, azure, vault, hashicorp, environment
SECRETS_PROVIDER=environment
# Encryption key ID for KMS/secrets manager
ENCRYPTION_KEY_ID=dyad-gateway-encryption-key
# Fallback encryption key (required for environment provider)
ENCRYPTION_KEY=your-32-byte-hex-key-here

# AWS CONFIGURATION (if using AWS provider)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_KMS_KEY_ID=your-kms-key-id

# AZURE CONFIGURATION (if using Azure provider)
AZURE_KEY_VAULT_URL=https://your-vault.vault.azure.net/
AZURE_CLIENT_ID=your-azure-client-id
AZURE_CLIENT_SECRET=your-azure-client-secret
AZURE_TENANT_ID=your-azure-tenant-id

# HASHICORP VAULT CONFIGURATION (if using Vault provider)
VAULT_ADDR=https://vault.example.com
VAULT_TOKEN=your-vault-token
VAULT_MOUNT_PATH=secret
VAULT_NAMESPACE=your-namespace

# KEY ROTATION CONFIGURATION
KEY_ROTATION_ENABLED=false
KEY_ROTATION_INTERVAL_HOURS=168
# KEY_ROTATION_SCHEDULE=0 0 */168 * * *

# SECRETS CACHE CONFIGURATION
SECRETS_CACHE_ENABLED=true
SECRETS_CACHE_TTL_SECONDS=300
SECRETS_CACHE_MAX_SIZE=100

# FALLBACK CONFIGURATION
SECRETS_FALLBACK_ENABLED=true
SECRETS_FALLBACK_TO_ENV=true

# SMTP configuration options for the email service
# For testing, you can use a fake SMTP service like Ethereal: https://ethereal.email/create
SMTP_HOST=email-server
SMTP_PORT=587
SMTP_USERNAME=email-server-username
SMTP_PASSWORD=email-server-password
EMAIL_FROM=support@yourapp.com

# Gateway Configuration
# Enable/disable the gateway service
GATEWAY_ENABLED=true
# Gateway service port (separate from main API)
GATEWAY_PORT=3001
# API prefix for OpenAI-compatible endpoints
GATEWAY_API_PREFIX=/v1
# Admin API prefix for provider management
GATEWAY_ADMIN_PREFIX=/admin

# Sandbox Configuration
# Enable/disable containerized execution
GATEWAY_SANDBOX_ENABLED=true
# Docker image for sandbox execution
GATEWAY_SANDBOX_IMAGE=node:18-alpine
# Sandbox execution timeout in milliseconds
GATEWAY_SANDBOX_TIMEOUT=60000
# Memory limit for sandbox containers
GATEWAY_SANDBOX_MEMORY_LIMIT=512m
# CPU limit for sandbox containers
GATEWAY_SANDBOX_CPU_LIMIT=0.5

# Rate Limiting
# Rate limit window in milliseconds (15 minutes)
GATEWAY_RATE_LIMIT_WINDOW=900000
# Maximum requests per window
GATEWAY_RATE_LIMIT_MAX=100

# Security
# Header name for API key authentication
GATEWAY_API_KEY_HEADER=Authorization
# CORS origin configuration
GATEWAY_CORS_ORIGIN=*

# Adapter Configuration
# Default adapter timeout in milliseconds
GATEWAY_ADAPTER_TIMEOUT=30000
# Number of retry attempts for failed requests
GATEWAY_ADAPTER_RETRY_ATTEMPTS=3
# Delay between retry attempts in milliseconds
GATEWAY_ADAPTER_RETRY_DELAY=1000

# Circuit Breaker
# Number of failures before opening circuit
GATEWAY_CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
# Circuit breaker timeout in milliseconds
GATEWAY_CIRCUIT_BREAKER_TIMEOUT=60000
# Time before attempting to reset circuit in milliseconds
GATEWAY_CIRCUIT_BREAKER_RESET_TIMEOUT=300000

# Health Check
# Health check interval in milliseconds
GATEWAY_HEALTH_CHECK_INTERVAL=30000

# Logging
# Log level for gateway operations
GATEWAY_LOG_LEVEL=info
# Enable/disable sensitive data redaction in logs
GATEWAY_LOG_REDACT_SENSITIVE=true
