name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths: [ 'frontend/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'frontend/**' ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
    
    - name: Run type checking
      run: npm run type-check
      working-directory: frontend
    
    - name: Run linting
      run: npm run lint
      working-directory: frontend
    
    - name: Run unit tests
      run: npm run test:run
      working-directory: frontend
    
    - name: Run accessibility tests
      run: npm run test:a11y
      working-directory: frontend
    
    - name: Run performance tests
      run: npm run test:performance
      working-directory: frontend
    
    - name: Generate coverage report
      run: npm run test:coverage
      working-directory: frontend
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage

  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      working-directory: frontend
    
    - name: Build application
      run: npm run build
      working-directory: frontend
    
    - name: Run E2E tests
      run: npm run test:e2e
      working-directory: frontend
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

  accessibility-audit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
    
    - name: Build application
      run: npm run build
      working-directory: frontend
    
    - name: Start application
      run: npm run preview &
      working-directory: frontend
    
    - name: Wait for application to start
      run: npx wait-on http://localhost:4173
      working-directory: frontend
    
    - name: Run axe-core accessibility tests
      run: |
        npm install -g @axe-core/cli
        axe http://localhost:4173 --exit
      working-directory: frontend

  performance-audit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
    
    - name: Build application
      run: npm run build
      working-directory: frontend
    
    - name: Start application
      run: npm run preview &
      working-directory: frontend
    
    - name: Wait for application to start
      run: npx wait-on http://localhost:4173
      working-directory: frontend
    
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun
      working-directory: frontend
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
    
    - name: Run security audit
      run: npm audit --audit-level moderate
      working-directory: frontend
    
    - name: Run dependency vulnerability scan
      run: |
        npm install -g snyk
        snyk test
      working-directory: frontend
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}